State 75 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce


Grammar

    0 $accept: root $end

    1 root: function_list

    2 function_list: function
    3              | function_list function

    4 function: function_decl TOK_SEMICOLON
    5         | function_defn

    6 function_decl: type name TOK_LPAREN parameter_list TOK_RPAREN

    7 function_defn: function_decl block

    8 type: TOK_IDENTIFIER

    9 name: TOK_IDENTIFIER

   10 parameter_list: %empty
   11               | declaration
   12               | parameter_list TOK_COMMA declaration

   13 block: TOK_LBRACE suite TOK_RBRACE

   14 suite: %empty
   15      | suite statement

   16 declaration: type name

   17 statement: single_statement TOK_SEMICOLON
   18          | compound_statement

   19 single_statement: declaration TOK_ASSIGN expression
   20                 | name TOK_ASSIGN expression
   21                 | name binary_op TOK_ASSIGN expression
   22                 | TOK_BREAK
   23                 | TOK_CONTINUE
   24                 | TOK_RETURN
   25                 | TOK_RETURN expression
   26                 | expression

   27 expression: TOK_TRUE
   28           | TOK_FALSE
   29           | TOK_INTEGER
   30           | TOK_FLOAT
   31           | binary_expression
   32           | unary_expression
   33           | relational_expression
   34           | ternary_expression
   35           | cast_expression
   36           | function_call
   37           | TOK_LPAREN expression TOK_RPAREN

   38 compound_statement: TOK_IF TOK_LPAREN expression TOK_RPAREN block
   39                   | TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN block
   40                   | TOK_WHILE TOK_LPAREN expression TOK_RPAREN block

   41 maybe_single_statement: %empty
   42                       | single_statement

   43 maybe_expression: %empty
   44                 | expression

   45 unary_expression: unary_op expression

   46 binary_expression: expression binary_op expression

   47 relational_expression: expression relational_op expression

   48 unary_op: TOK_MINUS

   49 binary_op: TOK_PLUS
   50          | TOK_MINUS
   51          | TOK_STAR
   52          | TOK_SLASH
   53          | TOK_LOG_AND
   54          | TOK_LOG_OR

   55 relational_op: TOK_EQ
   56              | TOK_NE
   57              | TOK_LT
   58              | TOK_GT
   59              | TOK_LE
   60              | TOK_GE

   61 ternary_expression: expression TOK_QUESTION_MARK expression TOK_COLON expression

   62 cast_expression: TOK_LPAREN type TOK_RPAREN expression

   63 function_call: name TOK_LPAREN func_args TOK_RPAREN

   64 func_args: %empty
   65          | expression
   66          | func_args TOK_COMMA expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_IDENTIFIER <std::string> (258) 8 9
    TOK_INTEGER <int> (259) 29
    TOK_FLOAT <float> (260) 30
    TOK_TRUE (261) 27
    TOK_FALSE (262) 28
    TOK_LOG_OR (263) 54
    TOK_LOG_AND (264) 53
    TOK_EQ (265) 55
    TOK_NE (266) 56
    TOK_LT (267) 57
    TOK_GT (268) 58
    TOK_LE (269) 59
    TOK_GE (270) 60
    TOK_PLUS (271) 49
    TOK_MINUS (272) 48 50
    TOK_STAR (273) 51
    TOK_SLASH (274) 52
    PMINUS (275)
    L_ASSOC (276)
    R_ASSOC (277)
    TOK_IF (278) 38
    TOK_WHILE (279) 40
    TOK_FOR (280) 39
    TOK_BREAK (281) 22
    TOK_CONTINUE (282) 23
    TOK_RETURN (283) 24 25
    TOK_LPAREN (284) 6 37 38 39 40 62 63
    TOK_RPAREN (285) 6 37 38 39 40 62 63
    TOK_LBRACE (286) 13
    TOK_RBRACE (287) 13
    TOK_COMMA (288) 12 66
    TOK_SEMICOLON (289) 4 17 39
    TOK_COLON (290) 61
    TOK_QUESTION_MARK (291) 61
    TOK_ASSIGN (292) 19 20 21


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    root <Node*> (39)
        on left: 1
        on right: 0
    function_list (40)
        on left: 2 3
        on right: 1 3
    function (41)
        on left: 4 5
        on right: 2 3
    function_decl (42)
        on left: 6
        on right: 4 7
    function_defn (43)
        on left: 7
        on right: 5
    type (44)
        on left: 8
        on right: 6 16 62
    name (45)
        on left: 9
        on right: 6 16 20 21 63
    parameter_list (46)
        on left: 10 11 12
        on right: 6 12
    block (47)
        on left: 13
        on right: 7 38 39 40
    suite (48)
        on left: 14 15
        on right: 13 15
    declaration (49)
        on left: 16
        on right: 11 12 19
    statement (50)
        on left: 17 18
        on right: 15
    single_statement (51)
        on left: 19 20 21 22 23 24 25 26
        on right: 17 42
    expression (52)
        on left: 27 28 29 30 31 32 33 34 35 36 37
        on right: 19 20 21 25 26 37 38 40 44 45 46 47 61 62 65 66
    compound_statement (53)
        on left: 38 39 40
        on right: 18
    maybe_single_statement (54)
        on left: 41 42
        on right: 39
    maybe_expression (55)
        on left: 43 44
        on right: 39
    unary_expression (56)
        on left: 45
        on right: 32
    binary_expression (57)
        on left: 46
        on right: 31
    relational_expression (58)
        on left: 47
        on right: 33
    unary_op (59)
        on left: 48
        on right: 45
    binary_op (60)
        on left: 49 50 51 52 53 54
        on right: 21 46
    relational_op (61)
        on left: 55 56 57 58 59 60
        on right: 47
    ternary_expression (62)
        on left: 61
        on right: 34
    cast_expression (63)
        on left: 62
        on right: 35
    function_call (64)
        on left: 63
        on right: 36
    func_args (65)
        on left: 64 65 66
        on right: 63 66


State 0

    0 $accept: . root $end

    TOK_IDENTIFIER  shift, and go to state 1

    root           go to state 2
    function_list  go to state 3
    function       go to state 4
    function_decl  go to state 5
    function_defn  go to state 6
    type           go to state 7


State 1

    8 type: TOK_IDENTIFIER .

    $default  reduce using rule 8 (type)


State 2

    0 $accept: root . $end

    $end  shift, and go to state 8


State 3

    1 root: function_list .
    3 function_list: function_list . function

    TOK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 1 (root)

    function       go to state 9
    function_decl  go to state 5
    function_defn  go to state 6
    type           go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    4 function: function_decl . TOK_SEMICOLON
    7 function_defn: function_decl . block

    TOK_LBRACE     shift, and go to state 10
    TOK_SEMICOLON  shift, and go to state 11

    block  go to state 12


State 6

    5 function: function_defn .

    $default  reduce using rule 5 (function)


State 7

    6 function_decl: type . name TOK_LPAREN parameter_list TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 13

    name  go to state 14


State 8

    0 $accept: root $end .

    $default  accept


State 9

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 10

   13 block: TOK_LBRACE . suite TOK_RBRACE

    $default  reduce using rule 14 (suite)

    suite  go to state 15


State 11

    4 function: function_decl TOK_SEMICOLON .

    $default  reduce using rule 4 (function)


State 12

    7 function_defn: function_decl block .

    $default  reduce using rule 7 (function_defn)


State 13

    9 name: TOK_IDENTIFIER .

    $default  reduce using rule 9 (name)


State 14

    6 function_decl: type name . TOK_LPAREN parameter_list TOK_RPAREN

    TOK_LPAREN  shift, and go to state 16


State 15

   13 block: TOK_LBRACE suite . TOK_RBRACE
   15 suite: suite . statement

    TOK_IDENTIFIER  shift, and go to state 17
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_IF          shift, and go to state 23
    TOK_WHILE       shift, and go to state 24
    TOK_FOR         shift, and go to state 25
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28
    TOK_LPAREN      shift, and go to state 29
    TOK_RBRACE      shift, and go to state 30

    type                   go to state 31
    name                   go to state 32
    declaration            go to state 33
    statement              go to state 34
    single_statement       go to state 35
    expression             go to state 36
    compound_statement     go to state 37
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 16

    6 function_decl: type name TOK_LPAREN . parameter_list TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 10 (parameter_list)

    type            go to state 31
    parameter_list  go to state 45
    declaration     go to state 46


State 17

    8 type: TOK_IDENTIFIER .
    9 name: TOK_IDENTIFIER .

    TOK_IDENTIFIER  reduce using rule 8 (type)
    TOK_RPAREN      reduce using rule 8 (type)
    $default        reduce using rule 9 (name)


State 18

   29 expression: TOK_INTEGER .

    $default  reduce using rule 29 (expression)


State 19

   30 expression: TOK_FLOAT .

    $default  reduce using rule 30 (expression)


State 20

   27 expression: TOK_TRUE .

    $default  reduce using rule 27 (expression)


State 21

   28 expression: TOK_FALSE .

    $default  reduce using rule 28 (expression)


State 22

   48 unary_op: TOK_MINUS .

    $default  reduce using rule 48 (unary_op)


State 23

   38 compound_statement: TOK_IF . TOK_LPAREN expression TOK_RPAREN block

    TOK_LPAREN  shift, and go to state 47


State 24

   40 compound_statement: TOK_WHILE . TOK_LPAREN expression TOK_RPAREN block

    TOK_LPAREN  shift, and go to state 48


State 25

   39 compound_statement: TOK_FOR . TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN block

    TOK_LPAREN  shift, and go to state 49


State 26

   22 single_statement: TOK_BREAK .

    $default  reduce using rule 22 (single_statement)


State 27

   23 single_statement: TOK_CONTINUE .

    $default  reduce using rule 23 (single_statement)


State 28

   24 single_statement: TOK_RETURN .
   25                 | TOK_RETURN . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    $default  reduce using rule 24 (single_statement)

    name                   go to state 50
    expression             go to state 51
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 29

   37 expression: TOK_LPAREN . expression TOK_RPAREN
   62 cast_expression: TOK_LPAREN . type TOK_RPAREN expression

    TOK_IDENTIFIER  shift, and go to state 17
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    type                   go to state 52
    name                   go to state 50
    expression             go to state 53
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 30

   13 block: TOK_LBRACE suite TOK_RBRACE .

    $default  reduce using rule 13 (block)


State 31

   16 declaration: type . name

    TOK_IDENTIFIER  shift, and go to state 13

    name  go to state 54


State 32

   20 single_statement: name . TOK_ASSIGN expression
   21                 | name . binary_op TOK_ASSIGN expression
   63 function_call: name . TOK_LPAREN func_args TOK_RPAREN

    TOK_LOG_OR   shift, and go to state 55
    TOK_LOG_AND  shift, and go to state 56
    TOK_PLUS     shift, and go to state 57
    TOK_MINUS    shift, and go to state 58
    TOK_STAR     shift, and go to state 59
    TOK_SLASH    shift, and go to state 60
    TOK_LPAREN   shift, and go to state 61
    TOK_ASSIGN   shift, and go to state 62

    binary_op  go to state 63


State 33

   19 single_statement: declaration . TOK_ASSIGN expression

    TOK_ASSIGN  shift, and go to state 64


State 34

   15 suite: suite statement .

    $default  reduce using rule 15 (suite)


State 35

   17 statement: single_statement . TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 65


State 36

   26 single_statement: expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 26 (single_statement)

    binary_op      go to state 73
    relational_op  go to state 74


State 37

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 38

   32 expression: unary_expression .

    $default  reduce using rule 32 (expression)


State 39

   31 expression: binary_expression .

    $default  reduce using rule 31 (expression)


State 40

   33 expression: relational_expression .

    $default  reduce using rule 33 (expression)


State 41

   45 unary_expression: unary_op . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 75
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 42

   34 expression: ternary_expression .

    $default  reduce using rule 34 (expression)


State 43

   35 expression: cast_expression .

    $default  reduce using rule 35 (expression)


State 44

   36 expression: function_call .

    $default  reduce using rule 36 (expression)


State 45

    6 function_decl: type name TOK_LPAREN parameter_list . TOK_RPAREN
   12 parameter_list: parameter_list . TOK_COMMA declaration

    TOK_RPAREN  shift, and go to state 76
    TOK_COMMA   shift, and go to state 77


State 46

   11 parameter_list: declaration .

    $default  reduce using rule 11 (parameter_list)


State 47

   38 compound_statement: TOK_IF TOK_LPAREN . expression TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 78
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 48

   40 compound_statement: TOK_WHILE TOK_LPAREN . expression TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 79
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 49

   39 compound_statement: TOK_FOR TOK_LPAREN . maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 17
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28
    TOK_LPAREN      shift, and go to state 29

    $default  reduce using rule 41 (maybe_single_statement)

    type                    go to state 31
    name                    go to state 32
    declaration             go to state 33
    single_statement        go to state 80
    expression              go to state 36
    maybe_single_statement  go to state 81
    unary_expression        go to state 38
    binary_expression       go to state 39
    relational_expression   go to state 40
    unary_op                go to state 41
    ternary_expression      go to state 42
    cast_expression         go to state 43
    function_call           go to state 44


State 50

   63 function_call: name . TOK_LPAREN func_args TOK_RPAREN

    TOK_LPAREN  shift, and go to state 61


State 51

   25 single_statement: TOK_RETURN expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 25 (single_statement)

    binary_op      go to state 73
    relational_op  go to state 74


State 52

   62 cast_expression: TOK_LPAREN type . TOK_RPAREN expression

    TOK_RPAREN  shift, and go to state 82


State 53

   37 expression: TOK_LPAREN expression . TOK_RPAREN
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_RPAREN         shift, and go to state 83
    TOK_QUESTION_MARK  shift, and go to state 72

    binary_op      go to state 73
    relational_op  go to state 74


State 54

   16 declaration: type name .

    $default  reduce using rule 16 (declaration)


State 55

   54 binary_op: TOK_LOG_OR .

    $default  reduce using rule 54 (binary_op)


State 56

   53 binary_op: TOK_LOG_AND .

    $default  reduce using rule 53 (binary_op)


State 57

   49 binary_op: TOK_PLUS .

    $default  reduce using rule 49 (binary_op)


State 58

   50 binary_op: TOK_MINUS .

    $default  reduce using rule 50 (binary_op)


State 59

   51 binary_op: TOK_STAR .

    $default  reduce using rule 51 (binary_op)


State 60

   52 binary_op: TOK_SLASH .

    $default  reduce using rule 52 (binary_op)


State 61

   63 function_call: name TOK_LPAREN . func_args TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    $default  reduce using rule 64 (func_args)

    name                   go to state 50
    expression             go to state 84
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44
    func_args              go to state 85


State 62

   20 single_statement: name TOK_ASSIGN . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 86
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 63

   21 single_statement: name binary_op . TOK_ASSIGN expression

    TOK_ASSIGN  shift, and go to state 87


State 64

   19 single_statement: declaration TOK_ASSIGN . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 88
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 65

   17 statement: single_statement TOK_SEMICOLON .

    $default  reduce using rule 17 (statement)


State 66

   55 relational_op: TOK_EQ .

    $default  reduce using rule 55 (relational_op)


State 67

   56 relational_op: TOK_NE .

    $default  reduce using rule 56 (relational_op)


State 68

   57 relational_op: TOK_LT .

    $default  reduce using rule 57 (relational_op)


State 69

   58 relational_op: TOK_GT .

    $default  reduce using rule 58 (relational_op)


State 70

   59 relational_op: TOK_LE .

    $default  reduce using rule 59 (relational_op)


State 71

   60 relational_op: TOK_GE .

    $default  reduce using rule 60 (relational_op)


State 72

   61 ternary_expression: expression TOK_QUESTION_MARK . expression TOK_COLON expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 89
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 73

   46 binary_expression: expression binary_op . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 90
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 74

   47 relational_expression: expression relational_op . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 91
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 75

   45 unary_expression: unary_op expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_QUESTION_MARK  shift, and go to state 72

    TOK_QUESTION_MARK  [reduce using rule 45 (unary_expression)]
    $default           reduce using rule 45 (unary_expression)

    binary_op      go to state 73
    relational_op  go to state 74


State 76

    6 function_decl: type name TOK_LPAREN parameter_list TOK_RPAREN .

    $default  reduce using rule 6 (function_decl)


State 77

   12 parameter_list: parameter_list TOK_COMMA . declaration

    TOK_IDENTIFIER  shift, and go to state 1

    type         go to state 31
    declaration  go to state 92


State 78

   38 compound_statement: TOK_IF TOK_LPAREN expression . TOK_RPAREN block
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_RPAREN         shift, and go to state 93
    TOK_QUESTION_MARK  shift, and go to state 72

    binary_op      go to state 73
    relational_op  go to state 74


State 79

   40 compound_statement: TOK_WHILE TOK_LPAREN expression . TOK_RPAREN block
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_RPAREN         shift, and go to state 94
    TOK_QUESTION_MARK  shift, and go to state 72

    binary_op      go to state 73
    relational_op  go to state 74


State 80

   42 maybe_single_statement: single_statement .

    $default  reduce using rule 42 (maybe_single_statement)


State 81

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement . TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN block

    TOK_SEMICOLON  shift, and go to state 95


State 82

   62 cast_expression: TOK_LPAREN type TOK_RPAREN . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 96
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 83

   37 expression: TOK_LPAREN expression TOK_RPAREN .

    $default  reduce using rule 37 (expression)


State 84

   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression
   65 func_args: expression .

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 65 (func_args)

    binary_op      go to state 73
    relational_op  go to state 74


State 85

   63 function_call: name TOK_LPAREN func_args . TOK_RPAREN
   66 func_args: func_args . TOK_COMMA expression

    TOK_RPAREN  shift, and go to state 97
    TOK_COMMA   shift, and go to state 98


State 86

   20 single_statement: name TOK_ASSIGN expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 20 (single_statement)

    binary_op      go to state 73
    relational_op  go to state 74


State 87

   21 single_statement: name binary_op TOK_ASSIGN . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 99
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 88

   19 single_statement: declaration TOK_ASSIGN expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 19 (single_statement)

    binary_op      go to state 73
    relational_op  go to state 74


State 89

   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression
   61                   | expression TOK_QUESTION_MARK expression . TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_COLON          shift, and go to state 100
    TOK_QUESTION_MARK  shift, and go to state 72

    binary_op      go to state 73
    relational_op  go to state 74


State 90

   46 binary_expression: expression . binary_op expression
   46                  | expression binary_op expression .
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_QUESTION_MARK  shift, and go to state 72

    TOK_QUESTION_MARK  [reduce using rule 46 (binary_expression)]
    $default           reduce using rule 46 (binary_expression)

    binary_op      go to state 73
    relational_op  go to state 74


State 91

   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   47                      | expression relational_op expression .
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_QUESTION_MARK  shift, and go to state 72

    TOK_QUESTION_MARK  [reduce using rule 47 (relational_expression)]
    $default           reduce using rule 47 (relational_expression)

    binary_op      go to state 73
    relational_op  go to state 74


State 92

   12 parameter_list: parameter_list TOK_COMMA declaration .

    $default  reduce using rule 12 (parameter_list)


State 93

   38 compound_statement: TOK_IF TOK_LPAREN expression TOK_RPAREN . block

    TOK_LBRACE  shift, and go to state 10

    block  go to state 101


State 94

   40 compound_statement: TOK_WHILE TOK_LPAREN expression TOK_RPAREN . block

    TOK_LBRACE  shift, and go to state 10

    block  go to state 102


State 95

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON . maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    $default  reduce using rule 43 (maybe_expression)

    name                   go to state 50
    expression             go to state 103
    maybe_expression       go to state 104
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 96

   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression
   62 cast_expression: TOK_LPAREN type TOK_RPAREN expression .

    TOK_QUESTION_MARK  shift, and go to state 72

    TOK_QUESTION_MARK  [reduce using rule 62 (cast_expression)]
    $default           reduce using rule 62 (cast_expression)

    binary_op      go to state 73
    relational_op  go to state 74


State 97

   63 function_call: name TOK_LPAREN func_args TOK_RPAREN .

    $default  reduce using rule 63 (function_call)


State 98

   66 func_args: func_args TOK_COMMA . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 105
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 99

   21 single_statement: name binary_op TOK_ASSIGN expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 21 (single_statement)

    binary_op      go to state 73
    relational_op  go to state 74


State 100

   61 ternary_expression: expression TOK_QUESTION_MARK expression TOK_COLON . expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_LPAREN      shift, and go to state 29

    name                   go to state 50
    expression             go to state 106
    unary_expression       go to state 38
    binary_expression      go to state 39
    relational_expression  go to state 40
    unary_op               go to state 41
    ternary_expression     go to state 42
    cast_expression        go to state 43
    function_call          go to state 44


State 101

   38 compound_statement: TOK_IF TOK_LPAREN expression TOK_RPAREN block .

    $default  reduce using rule 38 (compound_statement)


State 102

   40 compound_statement: TOK_WHILE TOK_LPAREN expression TOK_RPAREN block .

    $default  reduce using rule 40 (compound_statement)


State 103

   44 maybe_expression: expression .
   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 44 (maybe_expression)

    binary_op      go to state 73
    relational_op  go to state 74


State 104

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression . TOK_SEMICOLON maybe_single_statement TOK_RPAREN block

    TOK_SEMICOLON  shift, and go to state 107


State 105

   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression
   66 func_args: func_args TOK_COMMA expression .

    TOK_LOG_OR         shift, and go to state 55
    TOK_LOG_AND        shift, and go to state 56
    TOK_EQ             shift, and go to state 66
    TOK_NE             shift, and go to state 67
    TOK_LT             shift, and go to state 68
    TOK_GT             shift, and go to state 69
    TOK_LE             shift, and go to state 70
    TOK_GE             shift, and go to state 71
    TOK_PLUS           shift, and go to state 57
    TOK_MINUS          shift, and go to state 58
    TOK_STAR           shift, and go to state 59
    TOK_SLASH          shift, and go to state 60
    TOK_QUESTION_MARK  shift, and go to state 72

    $default  reduce using rule 66 (func_args)

    binary_op      go to state 73
    relational_op  go to state 74


State 106

   46 binary_expression: expression . binary_op expression
   47 relational_expression: expression . relational_op expression
   61 ternary_expression: expression . TOK_QUESTION_MARK expression TOK_COLON expression
   61                   | expression TOK_QUESTION_MARK expression TOK_COLON expression .

    TOK_QUESTION_MARK  shift, and go to state 72

    TOK_QUESTION_MARK  [reduce using rule 61 (ternary_expression)]
    $default           reduce using rule 61 (ternary_expression)

    binary_op      go to state 73
    relational_op  go to state 74


State 107

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON . maybe_single_statement TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 17
    TOK_INTEGER     shift, and go to state 18
    TOK_FLOAT       shift, and go to state 19
    TOK_TRUE        shift, and go to state 20
    TOK_FALSE       shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28
    TOK_LPAREN      shift, and go to state 29

    $default  reduce using rule 41 (maybe_single_statement)

    type                    go to state 31
    name                    go to state 32
    declaration             go to state 33
    single_statement        go to state 80
    expression              go to state 36
    maybe_single_statement  go to state 108
    unary_expression        go to state 38
    binary_expression       go to state 39
    relational_expression   go to state 40
    unary_op                go to state 41
    ternary_expression      go to state 42
    cast_expression         go to state 43
    function_call           go to state 44


State 108

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement . TOK_RPAREN block

    TOK_RPAREN  shift, and go to state 109


State 109

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN . block

    TOK_LBRACE  shift, and go to state 10

    block  go to state 110


State 110

   39 compound_statement: TOK_FOR TOK_LPAREN maybe_single_statement TOK_SEMICOLON maybe_expression TOK_SEMICOLON maybe_single_statement TOK_RPAREN block .

    $default  reduce using rule 39 (compound_statement)
